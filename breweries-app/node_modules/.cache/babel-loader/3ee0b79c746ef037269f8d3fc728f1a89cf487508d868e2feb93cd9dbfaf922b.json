{"ast":null,"code":"var _jsxFileName = \"/Users/khanhngguyen/Desktop/KHANH/Integrify/fs15_8-breweries-app/breweries-app/src/pages/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLoaderData } from 'react-router';\nimport axios from 'axios';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const breweries = useLoaderData();\n  const filteredList = breweries.filter(brewery => {\n    return brewery.name.toLowerCase().includes(query.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"breweries-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Breweries list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"search Brewery by name\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Brewery type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Website\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: filteredList.map(brewery => /*#__PURE__*/_jsxDEV(Link, {\n            to: 'brewery/' + brewery.id.toString(),\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: brewery.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: brewery.brewery_type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [brewery.address_1, \" \", brewery.postal_code]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: brewery.website_url\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this)\n          }, brewery.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"BlYCrEzvQ9D2h8PD5uOc2kBQoFc=\", false, function () {\n  return [useLoaderData];\n});\n_c = Home;\nexport default Home;\nexport const breweriesLoader = async () => {\n  // const response = await fetch('https://api.openbrewerydb.org/v1/breweries');\n  // return response.json();\n  try {\n    const {\n      data\n    } = await axios.get('https://api.openbrewerydb.org/v1/breweries?by_country=england&per_page=62', {\n      headers: {\n        Accept: 'application/json'\n      }\n    });\n    // console.log(JSON.stringify(data, null, 4));\n    // console.log('response status: ', status);\n    return data;\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      console.log('error message: ', error.message);\n    } else {\n      console.log('unexpected error:', error);\n      return 'An unexpected error has occurred';\n    }\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Link","useLoaderData","axios","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","jsxDEV","_jsxDEV","Home","_s","query","setQuery","breweries","filteredList","filter","brewery","name","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","component","sx","minWidth","align","map","to","id","toString","border","brewery_type","address_1","postal_code","website_url","_c","breweriesLoader","data","get","headers","Accept","error","isAxiosError","console","log","message","$RefreshReg$"],"sources":["/Users/khanhngguyen/Desktop/KHANH/Integrify/fs15_8-breweries-app/breweries-app/src/pages/Home.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { useLoaderData } from 'react-router';\nimport axios from 'axios';\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper\n} from '@mui/material'\n\nimport Brewery from '../interfaces/Brewery';\n\ninterface GetBreweriesResponse {\n    data: Brewery[]\n}\n\nconst Home = () => {\n    const [query, setQuery] = useState('');\n    const breweries = useLoaderData() as Brewery[];\n    const filteredList = breweries.filter(brewery => {\n        return brewery.name.toLowerCase().includes(query.toLowerCase());\n    })\n    return (\n        <div className='breweries-list'>\n            <h2>Breweries list</h2>\n            <input\n            type='search'\n            placeholder='search Brewery by name'\n            value={query}\n            onChange={e => setQuery(e.target.value)}\n            />\n            <TableContainer component={Paper}>\n                {/* {breweries.map(brewery => (\n                    <Link to={'brewery/' + brewery.id.toString()} key={brewery.id}>\n                        <p>{brewery.name}</p>\n                        <p>{brewery.brewery_type}</p>\n                        <p>{brewery.city}</p>\n                        <p>{brewery.website_url}</p>\n                    </Link>\n                ))} */}\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Name</TableCell>\n                            <TableCell align=\"right\">Brewery type</TableCell>\n                            <TableCell align=\"right\">Address</TableCell>\n                            <TableCell align=\"right\">Website</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {filteredList.map(brewery => (\n                            <Link to={'brewery/' + brewery.id.toString()} key={brewery.id}>\n                                <TableRow sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                                    {/* <Link to={'brewery/' + brewery.id.toString()} key={brewery.id}> */}\n                                    <TableCell>{brewery.name}</TableCell>\n                                    <TableCell>{brewery.brewery_type}</TableCell>\n                                    <TableCell>{brewery.address_1} {brewery.postal_code}</TableCell>\n                                    <TableCell>{brewery.website_url}</TableCell>\n                                    {/* </Link> */}\n                                </TableRow>\n                            </Link>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}\n\nexport default Home\n\nexport const breweriesLoader = async () => {\n    // const response = await fetch('https://api.openbrewerydb.org/v1/breweries');\n    // return response.json();\n    try {\n        const { data } = await axios.get<GetBreweriesResponse>('https://api.openbrewerydb.org/v1/breweries?by_country=england&per_page=62',\n        {\n            headers: {\n                Accept: 'application/json',\n            },\n        });\n        // console.log(JSON.stringify(data, null, 4));\n        // console.log('response status: ', status);\n        return data;\n    } catch (error) {\n        if (axios.isAxiosError(error)) {\n            console.log('error message: ', error.message);\n        } else {\n            console.log('unexpected error:', error);\n            return 'An unexpected error has occurred';\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}