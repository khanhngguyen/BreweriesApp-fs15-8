{"ast":null,"code":"var _jsxFileName = \"/Users/khanhngguyen/Desktop/KHANH/Integrify/fs15_8-breweries-app/breweries-app/src/pages/Breweries.tsx\";\nimport React from 'react';\nimport axios from 'axios';\n\n// import { request } from 'http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Breweries = () => {\n  //const breweries: Brewery[] | any = useLoaderData();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_c = Breweries;\nexport default Breweries;\nexport const breweriesLoader = async url => {\n  try {\n    const {\n      data,\n      status\n    } = await axios.get('https://api.openbrewerydb.org/v1/breweries');\n    console.log(JSON.stringify(data));\n    console.log('Response status: ', status);\n    return data;\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      console.log('Error: ', error.message);\n      return error.message;\n    } else {\n      console.log('Unexpected error: ', error);\n      return 'An unexpected error occurred';\n    }\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Breweries\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","Breweries","fileName","_jsxFileName","lineNumber","columnNumber","_c","breweriesLoader","url","data","status","get","console","log","JSON","stringify","error","isAxiosError","message","$RefreshReg$"],"sources":["/Users/khanhngguyen/Desktop/KHANH/Integrify/fs15_8-breweries-app/breweries-app/src/pages/Breweries.tsx"],"sourcesContent":["import React from 'react'\nimport axios from 'axios';\nimport { useLoaderData } from 'react-router';\n// import { request } from 'http';\n\ninterface Brewery {\n  id: string;\n  name: string;\n  brewery_type: string;\n  address_1?: string | null;\n  address_2?: string | null;\n  address_3?: null;\n  city: string;\n  state_province: string;\n  postal_code: string;\n  country: string;\n  longitude?: string | null;\n  latitude?: string | null;\n  phone?: string | null;\n  website_url?: string | null;\n  state: string;\n  street?: string | null;\n}\n\ninterface GetBreweriesResponse {\n    data: Brewery[]\n}\n\nconst Breweries = () => {\n    //const breweries: Brewery[] | any = useLoaderData();\n    \n    return (\n        <div>\n        </div>\n    )\n}\n\nexport default Breweries\n\nexport const breweriesLoader = async (url: string) => {\n    try {\n        const { data, status } = await axios.get('https://api.openbrewerydb.org/v1/breweries');\n        console.log(JSON.stringify(data));\n        console.log('Response status: ', status);\n        return data\n    } catch (error: any) {\n        if (axios.isAxiosError(error)) {\n            console.log('Error: ', error.message);\n            return error.message;\n        } else {\n            console.log('Unexpected error: ', error);\n            return 'An unexpected error occurred';\n        }\n    }\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAyBA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACpB;;EAEA,oBACID,OAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd,CAAC;AAAAC,EAAA,GAPKL,SAAS;AASf,eAAeA,SAAS;AAExB,OAAO,MAAMM,eAAe,GAAG,MAAOC,GAAW,IAAK;EAClD,IAAI;IACA,MAAM;MAAEC,IAAI;MAAEC;IAAO,CAAC,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,4CAA4C,CAAC;IACtFC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;IACjCG,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,MAAM,CAAC;IACxC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOO,KAAU,EAAE;IACjB,IAAIlB,KAAK,CAACmB,YAAY,CAACD,KAAK,CAAC,EAAE;MAC3BJ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEG,KAAK,CAACE,OAAO,CAAC;MACrC,OAAOF,KAAK,CAACE,OAAO;IACxB,CAAC,MAAM;MACHN,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEG,KAAK,CAAC;MACxC,OAAO,8BAA8B;IACzC;EACJ;AACJ,CAAC;AAAA,IAAAV,EAAA;AAAAa,YAAA,CAAAb,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}